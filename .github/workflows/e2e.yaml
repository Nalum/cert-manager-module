name: e2e

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  kubernetes:
    strategy:
      matrix:
        version: [1.27.0, 1.27.1, 1.27.2, 1.27.3, 1.28.0, 1.29.0]
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: 1.21.x
          cache-dependency-path: |
            **/go.sum
            **/go.mod
      - name: Setup Kubernetes
        uses: helm/kind-action@dda0770415bac9fc20092cacbc54aa298604d140 # v1.8.0
        with:
          version: v0.20.0
          node_image: kindest/node:v${{ matrix.version }}
          cluster_name: kind
          kubectl_version: v${{ matrix.version }}
      - name: Setup Timoni
        uses: stefanprodan/timoni/actions/setup@main
      - name: Push module
        run: |
          timoni mod push ./modules/cert-manager oci://localhost:5000/cert-manager -v 1.0.0 --latest
      - name: Install module
        run: |
          timoni -n test apply cert-manager oci://localhost:5000/cert-manager
      - name: List modules
        run: |
          timoni list -A
      - name: Upgrade module with custom values
        run: |
          echo 'values: logLevel: 6' | timoni -n test apply cert-manager oci://localhost:5000/cert-manager -v 1.0.0 -f-
      - name: Upgrade module with debug values
        run: |
          timoni -n test apply cert-manager oci://localhost:5000/cert-manager -f ./modules/cert-manager/debug_values.cue
      - name: Inspect module
        run: |
          timoni -n test inspect resources cert-manager
          timoni -n test inspect module cert-manager
          timoni -n test inspect values cert-manager
      - name: Status module
        run: |
          timoni -n test status cert-manager
      - name: Create ClusterIssuer
        run: |
          kubectl apply -f test/data/clusterIssuer.yaml
          kubectl describe -f test/data/clusterIssuer.yaml
      - name: Create Certificate
        run: |
          kubectl apply -f test/data/certificate.yaml
          echo "Sleeping for 5 seconds"
          sleep 5
          kubectl describe -f test/data/certificate.yaml
          READY=$(kubectl -n test get certificate my-selfsigned-ca -o jsonpath="{$.status.conditions[?(@.type=='Ready')].status}")
          [ "${READY}" = "True" ] && echo "Certificate created successfully"
      - name: Uninstall module
        run: |
          timoni -n test delete cert-manager --wait
